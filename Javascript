1. 数据类型
there are 5 Simple data types in ECMAScript: Undefined, Null, Boolean, Number, String.
And one Complicated data type: Object.

empty string & boolean
"" == false : true
"" === false: false
===: not only compare value, but data type.


2. 函数声明和函数表达式
解析器在向执行环境加载数据时，对函数声明和函数表达式并非一视同仁。
解析器会先读取函数声明，将其添加到执行环境中，并使其在执行任何代码之前可以访问。该过程被称为函数声明提升(Function declaration hoisting).
但函数表达式则必须等到解析器执行到它所在的代码行，才会被真正解释执行。

3. 变量作用域
function fb(){
  num = 123;
}
如果在函数内部初始化num变量时没有加var关键字，那么，当调用完fb函数后，已经被添加到全局环境的变量num将继续存在，即仍然可以访问到该变量。
tips: 在初始化变量前一定要先声明，避免出现以上的问题。

4. 内存管理
只保留执行代码中的有用变量，一旦数据不再有用，最好手动将其置为null来释放其引用（解除引用：dereferencing）。
function createPerson(name){
  var localPerson = new Object();
  localPerson.name = name;
  return localPerson;
}
var globalPerson = createPerson("Jacky");
// other coding here.....
// dereferencing manually
globalPerson = null;

这一做法适用于大多数全局变量和全局变量的属性。
